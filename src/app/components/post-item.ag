<script lang="ts">
  // @ts-nocheck
  import { RouterLink } from '@angular/router' with { analog: 'imports' };
  import postInfo from '@components/post-info.ag' with { analog: 'imports' };
  import { input, computed } from '@angular/core';
  import { FrontMatter } from '@utils/frontmatter';

  type Info = Pick<FrontMatter, 'title' | 'description' | 'featuredImage' | 'createAt' | 'timeToRead' | 'music' | 'tags'>;

  const info = input.required<Info>();
  const image = computed(() => info().featuredImage || '/img/post-bg-01.jpg');
  const description = computed(() => info().description);
</script>

<template>
  <a class="image" [routerLink]="['/blog', info().slug]">
    <img [src]="image()" [alt]="info().title" width="1920" height="1080" loading="eager" fetchPriority="high" />
  </a>
  <a class="title" [routerLink]="['/blog', info().slug]">
    <h2>{{ info().title }}</h2>
    <p>{{ description() }}</p>
  </a>
  <post-info [info]="info()" />
</template>

<style>
  :host {
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-columns: 400px 1fr;
    grid-template-rows: auto 1fr;
    grid-template-areas:
      'image title'
      'image info';
    gap: 12px;
  }
  .title {
    grid-area: title;
    width: 100%;
    height: 100%;
    text-decoration: none;
    display: flex;
    flex-direction: column;
    gap: 12px;
    &:hover {
      h2, p {
        color: var(--color3-light);
      }
    }
  }
  .image {
    grid-area: image;
    overflow: hidden;
    & img {
      object-fit: cover;
      width: 100%;
      height: 100%;
      aspect-ratio: 16 / 9;
      &:hover {
        filter: brightness(0.8);
        transform: scale(1.1);
        transition: all 0.2s ease-in-out;
      }
    }
    &:hover + .title {
      h2, p {
        color: var(--color3-light);
      }
    }
  }

  h2 {
    color: var(--color1-contrast);
    font-family: var(--font-serif);
    font-size: 1.6rem;
    line-height: 1.3;
    margin: 0px;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  p {
    color: hsl(from var(--color1-contrast) h s 80%);
     font-size: 1.3rem;
    line-height: 1.3;
    height: calc(1.3 * 2 * 1.3rem);
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  post-info {
    color: var(--color3-contrast);
    grid-area: info;
    --post-info__font-size: 0.8rem;
  }

</style>
